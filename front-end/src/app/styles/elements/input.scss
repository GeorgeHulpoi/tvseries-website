@import "../mixins.scss";

$transition-type: cubic-bezier(0.455, 0.03, 0.515, 0.955);
$transition-time: 200ms;

$height: 3.875em;
$input-height: 1.875em; 
$distance: 0.5em;
$label-size: 0.875em; 
$icon-sie: 1.5em;
$color: #c3083f;

:host 
{
    float: left;
    width: 100%;
    padding: 0.625em 0;
    overflow: hidden;

    &.small 
    {
        font-size: 0.875em;
    }
    
    &.normal 
    {
        font-size: 1em;
    }
    
    &.large 
    {
        font-size: 1.125em;
    }

    &.loading 
    {
        pointer-events: none;

        .bar 
        {
            -webkit-animation-name: BarLoading;
                    animation-name: BarLoading;
            -webkit-animation-duration: 1s;
                    animation-duration: 1s;
            -webkit-animation-iteration-count: infinite;
                    animation-iteration-count: infinite;
            -webkit-animation-timing-function: ease-in-out;
                    animation-timing-function: ease-in-out;
        }
    }

    &.disabled
    {
        pointer-events: none !important;

        *
        {
            @include user-select(none);
            pointer-events: none !important;
        }
    }
}

@-webkit-keyframes BarLoading
{
    0% {-webkit-transform: translateX(-100%);transform: translateX(-100%);}
    50% {-webkit-transform: translateX(100%);transform: translateX(100%);}
    100% {-webkit-transform: translateX(100%);transform: translateX(100%);}
}

@keyframes BarLoading
{
    0% {-webkit-transform: translateX(-100%);transform: translateX(-100%);}
    50% {-webkit-transform: translateX(100%);transform: translateX(100%);}
    100% {-webkit-transform: translateX(100%);transform: translateX(100%);}
}

input 
{
    margin: 0;
    padding: ($label-size + $distance) 0 $distance 0;
    color: $color;
    width: 100%;
    border: 0;
    background: none;
    font-size: 1em;
    height: 100%;
    font-weight: 400;
    font-family: Poppins, Arial, sans-serif;
    line-height: 1.2;
}

.group 
{
    position: relative;
    height: $height + 0.0625em;
    border-bottom: 0.0625em solid rgba(255, 255, 255, 0.2);
    margin-bottom: 0.5em;
    -webkit-transition: opacity $transition-time $transition-type;
    -o-transition: opacity $transition-time $transition-type;
    transition: opacity $transition-time $transition-type;
}

.label 
{
    font-size: 1em;
    line-height: 1em;
    -webkit-transform-origin: left top;
    -ms-transform-origin: left top;
        transform-origin: left top;
    pointer-events: none;
    font-style: normal;
    position: absolute;
    left: 0;
    top: 50%;
    color: rgba(255, 255, 255, 0.2);
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    -webkit-transition: color $transition-type $transition-time, -webkit-transform $transition-type $transition-time;
    transition: color $transition-type $transition-time, -webkit-transform $transition-type $transition-time;
    -o-transition: transform $transition-type $transition-time, color $transition-type $transition-time;
    transition: transform $transition-type $transition-time, color $transition-type $transition-time;
    transition: transform $transition-type $transition-time, color $transition-type $transition-time, -webkit-transform $transition-type $transition-time;
    will-change: transform;
}

.bar
{
    width: 100%;
    height: 0.125em;
    background-color: $color;
    position: absolute;
    bottom: -0.125em;
    -webkit-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
            transform: translateX(-100%);
    -webkit-transition: background-color $transition-time $transition-type, -webkit-transform $transition-time $transition-type;
    transition: background-color $transition-time $transition-type, -webkit-transform $transition-time $transition-type;
    -o-transition: transform $transition-time $transition-type, background-color $transition-time $transition-type;
    transition: transform $transition-time $transition-type, background-color $transition-time $transition-type;
    transition: transform $transition-time $transition-type, background-color $transition-time $transition-type, -webkit-transform $transition-time $transition-type;
    will-change: transform;
}

input:focus ~ .bar
{
    -webkit-transform: translateX(0%);
        -ms-transform: translateX(0%);
            transform: translateX(0%);
}

.parent 
{
    input:focus ~ .label, &:not(.empty) .label
    {
        color: $color;
        -webkit-transform: translateY(calc(-50% + #{- (($height/2) - 0.5em - $distance) })) scale(0.875);
            -ms-transform: translateY(calc(-50% + #{- (($height/2) - 0.5em - $distance) })) scale(0.875);
                transform: translateY(calc(-50% + #{- (($height/2) - 0.5em - $distance) })) scale(0.875);
    }
}

:host(.ng-invalid.ng-dirty)
{
    .group
    {
        border-bottom-color: transparent !important;
    }

    .bar
    {
        background-color: rgba(255, 255, 255, 0.2);
        -webkit-transform: translateX(0%);
            -ms-transform: translateX(0%);
                transform: translateX(0%);
    }

    .label, .error, input:not(:focus)
    {
        color: rgba(255, 255, 255, 0.2);
    }

    .error 
    {
        display: block;
    }

    .error ~ .helper 
    {
        display: none;
    }
}

.helper, .error, .counter 
{
    font-size: 0.875em;
}

.helper, .error
{
    float: left;
    width: 100%;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
}

.counter 
{
    white-space: nowrap;
}

.counter ~ .error, .helper 
{
    overflow: hidden;
    white-space: nowrap;
    -o-text-overflow: ellipsis;
       text-overflow: ellipsis;
}

.helper, .counter 
{
    color: #8a8a8a;
}

.error
{
    display: none;
}

.flex 
{
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
        -ms-flex-direction: row-reverse;
            flex-direction: row-reverse;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
}